






# 1: CNCI.py: A classification tool for identify coding or non-coding transcripts (fasta files and gtf files)
python CNCI_package/CNCI.py \
 -f unannotation.gtf -g -o test \
 -m ve -p 8 \
 -d hg19.2bit

# parameters: 
# -f or --file : input files
# -o or --out :  output file, results in xxx.index
# -p: parallel
# -m: model --> should be ve for vertebrate species
# g: gtf file
# -d or --directory : if you use the -g or --gtf this parameter must be assigned, assign the path of your reference genome.



# 2: filter_novel_lincRNA.py: A tool that can convert the index file which produced by python CNCI_package/CNCI.py to four gene classes (novel_lincRNA,novel_coding, ambiguous_genes and filter_out_noncoding)
python filter_novel_lincRNA.py -i test.index -g unannotation.gtf -s 0 -l 200 -e exon_num -o out_dir 




python extract.py -i novel-noncoding.gtf,nov.gtf -n known-non-coding.gtf -c known-coding.gtf




filter_novel_lincRNA.py: A tool that can convert the index file which produced by python CNCI_package/CNCI.py to four gene classes (novel_lincRNA,novel_coding, ambiguous_genes and filter_out_noncoding)

Usage: filter_novel_lincRNA.py [-h] [-s 0] [-l 200] [-e 2] -i cnci_index -g unannotated_gtf -o out_dir

Parameters:

-i INDEX, --index=INDEX

(Required.) The path of coding/noncoding index file. This file is the output file of CNCI.py.

-g GTF, --gtf=GTF

(Required.) The path of potentially_novel gtf file. This file could be generated by compare.py.

-s SCORE, --score=SCORE

(Optional.) Threoshold of CNCI score. RNAs with score less than SCORE will be classified as noncoding. The Default is 0 .

-l LENGTH, --length=LENGTH

(Optional.) Minimal length of lincRNA. lincRNA with length >= LENGTH will be kept. The Default is 200.

-e EXON_NUM, --exon_num=EXON_NUM

(Optional.) Minimal exon number of lincRNA. lincRNA with exon number >= EXON_NUM will be kept. The Default is 2.

-o OUT_DIR, --out_dir=OUT_DIR

(Requried.) Output directory of the results.